# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    outputs:
      skip_build: ${{ steps.detect-package-manager.outputs.skip_build }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          # Check for Next.js project indicators (next.config.js, pages/, app/ directories)
          NEXTJS_EXISTS=false
          if [ -f "next.config.js" ] || [ -f "next.config.mjs" ] || [ -d "pages" ] || [ -d "app" ]; then
            NEXTJS_EXISTS=true
          fi
          
          # If no Next.js project indicators found, skip the build
          if [ "$NEXTJS_EXISTS" = "false" ]; then
            {
              echo "manager=none"
              echo "command=echo"
              echo "runner=echo"
              echo "has_nextjs=false"
              echo "skip_build=true"
            } >> "$GITHUB_OUTPUT"
            echo "ℹ️ No Next.js project detected. Skipping Next.js build steps." >&2
            exit 0
          fi
          
          # Check for package manager based on lock files and package.json
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            {
              echo "manager=yarn"
              echo "command=install"
              echo "runner=yarn"
              echo "has_nextjs=$NEXTJS_EXISTS"
              echo "skip_build=false"
            } >> "$GITHUB_OUTPUT"
            exit 0
          elif [ -f "${{ github.workspace }}/package-lock.json" ]; then
            {
              echo "manager=npm"
              echo "command=ci"
              echo "runner=npx --no-install"
              echo "has_nextjs=$NEXTJS_EXISTS"
              echo "skip_build=false"
            } >> "$GITHUB_OUTPUT"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            # package.json exists but no lock file - halt the build for security reasons
            {
              echo "manager=none"
              echo "command=echo"
              echo "runner=echo"
              echo "has_nextjs=$NEXTJS_EXISTS"
              echo "skip_build=true"
            } >> "$GITHUB_OUTPUT"
            echo "❌ ERROR: No lock file found (yarn.lock or package-lock.json). Aborting build for security reasons. See https://docs.npmjs.com/cli/v10/configuring-npm/package-lock-json for details." >&2
            exit 1
          else
            # No package.json found - skip the build gracefully
            {
              echo "manager=none"
              echo "command=echo"
              echo "runner=echo"
              echo "has_nextjs=false"
              echo "skip_build=true"
            } >> "$GITHUB_OUTPUT"
            echo "ℹ️ No Node.js package.json found. Skipping Next.js build steps." >&2
            exit 0
          fi
      - name: Setup Node
        if: steps.detect-package-manager.outputs.skip_build != 'true'
        uses: actions/setup-node@v4
        with:
          node-version: "20"
I'm sorry, but your instruction isn't clear. Can you please provide the specific change you want to make in this line of code?
      - name: Setup Pages
        if: steps.detect-package-manager.outputs.skip_build != 'true'
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Restore cache
        if: steps.detect-package-manager.outputs.skip_build != 'true'
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        if: steps.detect-package-manager.outputs.skip_build != 'true'
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        if: steps.detect-package-manager.outputs.skip_build != 'true'
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        if: steps.detect-package-manager.outputs.skip_build != 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    if: needs.build.outputs.skip_build != 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
