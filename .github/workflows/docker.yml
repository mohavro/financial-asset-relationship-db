name: Docker Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  docker-build:
    name: Build and Test Docker Image
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@<full-length-commit-SHA>

    - name: Build Docker image
      uses: docker/build-push-action@<full-length-commit-SHA>
      with:
        context: .
        push: false
        tags: financial-asset-db:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        # Run container in background
        docker run -d --name test-container -p 7860:7860 financial-asset-db:test
        
        # Wait for container to be ready
        sleep 10
        
        # Check if container is running
        docker ps | grep test-container
        
        # Check container health (basic)
        docker inspect test-container --format='{{.State.Running}}'
        
        # Clean up
        docker stop test-container
        docker rm test-container

    - name: Test Docker Compose
      run: |
        # Test docker compose configuration
        docker compose config
        
        # Build with docker compose
        docker compose build
        
        # Start services
        docker compose up -d
        
        # Wait for services to be ready
        sleep 15
        
        # Check services are running
        docker compose ps
        
        # Clean up
        docker compose down

  docker-security:
    name: Docker Security Scan
    runs-on: ubuntu-latest
    needs: docker-build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Build Docker image for scanning
      run: docker build -t financial-asset-db:scan .

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@v0.14.0
      with:
        image-ref: 'financial-asset-db:scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH'
      continue-on-error: true

    - name: Upload Trivy results to GitHub Security
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: 'trivy-results.sarif'
      continue-on-error: true
